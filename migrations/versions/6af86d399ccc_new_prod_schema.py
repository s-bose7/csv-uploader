"""new prod schema

Revision ID: 6af86d399ccc
Revises: 6b4b2fc53e01
Create Date: 2024-06-25 22:58:15.657618

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6af86d399ccc'
down_revision: Union[str, None] = '6b4b2fc53e01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # PL/SQL function to autogenerate agents upon new contact insertion.
    op.execute("""
        CREATE OR REPLACE FUNCTION create_agent()
        RETURNS TRIGGER AS $$
        DECLARE
            new_rank INTEGER;
        BEGIN
            -- Calculate the new rank
            SELECT COUNT(*) INTO new_rank FROM contacts WHERE organization_id = NEW.organization_id;

            -- Insert the new agent
            INSERT INTO agents (contact_id, organization_id, rank, club_id)
            VALUES (NEW.id, NEW.organization_id, new_rank, NEW.club_id);

            RETURN NEW;
        END;
        $$ LANGUAGE plpgsql;
    """)
    # PL/SQL trigger
    op.execute("""
        CREATE TRIGGER after_contact_insert
        AFTER INSERT ON contacts
        FOR EACH ROW
        EXECUTE FUNCTION create_agent();
    """)
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('agents', 'contact_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('agents', 'organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('clubs', 'organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('contacts', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('contacts', 'organization_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('contacts', 'first_name')
    op.drop_column('contacts', 'position')
    op.drop_column('contacts', 'source')
    op.add_column('organizations', sa.Column('category', sa.String(), nullable=True))
    op.alter_column('organizations', 'segment_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('organizations', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('organizations', 'created_at',
                    type_=sa.DateTime(),
                    nullable=True,
                    server_default=None)
    op.drop_column('organizations', 'irs_ein')
    op.drop_column('organizations', 'school_grade')
    op.drop_column('organizations', 'irs_ntee_code')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('organizations', sa.Column('irs_ntee_code', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('organizations', sa.Column('school_grade', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('organizations', sa.Column('irs_ein', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('organizations', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('organizations', 'segment_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('organizations', 'created_at',
                    type_=sa.DateTime(),
                    nullable=False,
                    server_default=sa.text('now()'))
    op.drop_column('organizations', 'category')
    op.add_column('contacts', sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('contacts', sa.Column('position', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('contacts', sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('contacts', 'organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('contacts', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('clubs', 'organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('agents', 'organization_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('agents', 'contact_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
